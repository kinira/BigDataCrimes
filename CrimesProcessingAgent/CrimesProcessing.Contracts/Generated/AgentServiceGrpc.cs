// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AgentService.proto
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using grpc = global::Grpc.Core;

namespace CrimesProcessing.Contracts {
  public static partial class CrimesService
  {
    static readonly string __ServiceName = "crimesProcessing.Contracts.CrimesService";

    static readonly grpc::Marshaller<global::CrimesProcessing.Contracts.CrimesRequest> __Marshaller_CrimesRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::CrimesProcessing.Contracts.CrimesRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::CrimesProcessing.Contracts.CrimesResponse> __Marshaller_CrimesResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::CrimesProcessing.Contracts.CrimesResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::CrimesProcessing.Contracts.CalculatePredictionRequest> __Marshaller_CalculatePredictionRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::CrimesProcessing.Contracts.CalculatePredictionRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::CrimesProcessing.Contracts.CalculatePredictionResponse> __Marshaller_CalculatePredictionResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::CrimesProcessing.Contracts.CalculatePredictionResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::CrimesProcessing.Contracts.CalculateAvgRequest> __Marshaller_CalculateAvgRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::CrimesProcessing.Contracts.CalculateAvgRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::CrimesProcessing.Contracts.CalculateAvgResponse> __Marshaller_CalculateAvgResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::CrimesProcessing.Contracts.CalculateAvgResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::CrimesProcessing.Contracts.CrimesRequest, global::CrimesProcessing.Contracts.CrimesResponse> __Method_SayHello = new grpc::Method<global::CrimesProcessing.Contracts.CrimesRequest, global::CrimesProcessing.Contracts.CrimesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SayHello",
        __Marshaller_CrimesRequest,
        __Marshaller_CrimesResponse);

    static readonly grpc::Method<global::CrimesProcessing.Contracts.CalculatePredictionRequest, global::CrimesProcessing.Contracts.CalculatePredictionResponse> __Method_GetProbability = new grpc::Method<global::CrimesProcessing.Contracts.CalculatePredictionRequest, global::CrimesProcessing.Contracts.CalculatePredictionResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetProbability",
        __Marshaller_CalculatePredictionRequest,
        __Marshaller_CalculatePredictionResponse);

    static readonly grpc::Method<global::CrimesProcessing.Contracts.CalculateAvgRequest, global::CrimesProcessing.Contracts.CalculateAvgResponse> __Method_CalculateCrimes = new grpc::Method<global::CrimesProcessing.Contracts.CalculateAvgRequest, global::CrimesProcessing.Contracts.CalculateAvgResponse>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "CalculateCrimes",
        __Marshaller_CalculateAvgRequest,
        __Marshaller_CalculateAvgResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::CrimesProcessing.Contracts.AgentServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of CrimesService</summary>
    public abstract partial class CrimesServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::CrimesProcessing.Contracts.CrimesResponse> SayHello(global::CrimesProcessing.Contracts.CrimesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::CrimesProcessing.Contracts.CalculatePredictionResponse> GetProbability(global::CrimesProcessing.Contracts.CalculatePredictionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task CalculateCrimes(global::CrimesProcessing.Contracts.CalculateAvgRequest request, grpc::IServerStreamWriter<global::CrimesProcessing.Contracts.CalculateAvgResponse> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for CrimesService</summary>
    public partial class CrimesServiceClient : grpc::ClientBase<CrimesServiceClient>
    {
      /// <summary>Creates a new client for CrimesService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public CrimesServiceClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for CrimesService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public CrimesServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected CrimesServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected CrimesServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::CrimesProcessing.Contracts.CrimesResponse SayHello(global::CrimesProcessing.Contracts.CrimesRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SayHello(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::CrimesProcessing.Contracts.CrimesResponse SayHello(global::CrimesProcessing.Contracts.CrimesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SayHello, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::CrimesProcessing.Contracts.CrimesResponse> SayHelloAsync(global::CrimesProcessing.Contracts.CrimesRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SayHelloAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::CrimesProcessing.Contracts.CrimesResponse> SayHelloAsync(global::CrimesProcessing.Contracts.CrimesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SayHello, null, options, request);
      }
      public virtual global::CrimesProcessing.Contracts.CalculatePredictionResponse GetProbability(global::CrimesProcessing.Contracts.CalculatePredictionRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetProbability(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::CrimesProcessing.Contracts.CalculatePredictionResponse GetProbability(global::CrimesProcessing.Contracts.CalculatePredictionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetProbability, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::CrimesProcessing.Contracts.CalculatePredictionResponse> GetProbabilityAsync(global::CrimesProcessing.Contracts.CalculatePredictionRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetProbabilityAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::CrimesProcessing.Contracts.CalculatePredictionResponse> GetProbabilityAsync(global::CrimesProcessing.Contracts.CalculatePredictionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetProbability, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::CrimesProcessing.Contracts.CalculateAvgResponse> CalculateCrimes(global::CrimesProcessing.Contracts.CalculateAvgRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return CalculateCrimes(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::CrimesProcessing.Contracts.CalculateAvgResponse> CalculateCrimes(global::CrimesProcessing.Contracts.CalculateAvgRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_CalculateCrimes, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override CrimesServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new CrimesServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(CrimesServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_SayHello, serviceImpl.SayHello)
          .AddMethod(__Method_GetProbability, serviceImpl.GetProbability)
          .AddMethod(__Method_CalculateCrimes, serviceImpl.CalculateCrimes).Build();
    }

  }
}
#endregion
